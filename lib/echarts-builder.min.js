!function(t,i){"object"==typeof exports&&"object"==typeof module?module.exports=i(require("echarts")):"function"==typeof define&&define.amd?define(["echarts"],i):"object"==typeof exports?exports.echartsBuilder=i(require("echarts")):t.echartsBuilder=i(t.echarts)}(self,(t=>(()=>{"use strict";var i={190:i=>{i.exports=t}},e={};function s(t){var r=e[t];if(void 0!==r)return r.exports;var o=e[t]={exports:{}};return i[t](o,o.exports,s),o.exports}s.d=(t,i)=>{for(var e in i)s.o(i,e)&&!s.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:i[e]})},s.o=(t,i)=>Object.prototype.hasOwnProperty.call(t,i),s.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var r={};return(()=>{s.r(r),s.d(r,{ArrayUtil:()=>o,EchartsAxisType:()=>d,EchartsBarStyle:()=>x,EchartsBuilder:()=>p,EchartsLineStyle:()=>y,EchartsPieStyle:()=>L,EchartsSeriesCommonStyle:()=>k,EchartsSeriesMarkLine:()=>M,EchartsSeriesMarkPoint:()=>K,EchartsStyleBase:()=>u,EchartsTooltipStyle:()=>A,ObjectUtil:()=>n,SeriesBuilder:()=>B,SeriesLabelBuilder:()=>w,SeriesLabelFormatterBuilder:()=>O,default:()=>T});var t={};s.r(t),s.d(t,{ArrayUtil:()=>o,EchartsAxisType:()=>d,EchartsBarStyle:()=>x,EchartsBuilder:()=>p,EchartsLineStyle:()=>y,EchartsPieStyle:()=>L,EchartsSeriesCommonStyle:()=>k,EchartsSeriesMarkLine:()=>M,EchartsSeriesMarkPoint:()=>K,EchartsStyleBase:()=>u,EchartsTooltipStyle:()=>A,ObjectUtil:()=>n,SeriesBuilder:()=>B,SeriesLabelBuilder:()=>w,SeriesLabelFormatterBuilder:()=>O,default:()=>T});const i=t;var e=s(190);const o=new class{deepAssign(t,i){if(!i)return t;const e=[];if(!Array.isArray(i)){if("object"==typeof i){for(let s of t)e.push(n.deepAssign({},s,i));return e}return t}for(let s=0;s<i.length;s++){const r=i[s];null!=r?Array.isArray(r)?e.push(this.deepAssign(t[s]||[],r)):"object"!=typeof r?e.push(r):e.push(n.deepAssign(t[s]||{},r)):e.push(t[s])}return e}is2DArray(t){return Array.isArray(t[0])||t.every((t=>Array.isArray(t)))}};const n=new class{deepAssign(t,...i){if(!i)return t;for(let e of i)if("object"==typeof e)for(const i in e)if(e.hasOwnProperty(i)){const s=e[i];if(null==s)continue;Array.isArray(s)?t[i]=o.deepAssign(t[i]||[],e[i]):t[i]=s instanceof Function?s():"object"!=typeof s?s:this.deepAssign(t[i]||{},s)}return t}deepAssignByKey(t,i,...e){return e?(t[i]||(t[i]={}),this.deepAssign(t[i],...e)):t}};const a=class{instance;option=p.defaultOption.getDefaultOption();assignOption={};constructor(t){if("string"==typeof t&&(t=document.getElementById(t)),!(t instanceof HTMLElement))throw new Error("element error");this.instance=e.getInstanceByDom(t),this.instance||(this.instance=e.init(t))}listenWindowResize(){window&&window.addEventListener&&window.addEventListener("resize",(()=>{this.instance.resize({animation:{duration:300,easing:"quadraticIn"}})}))}assign(t){for(let i in t)if(t[i]&&"series"!==i&&"seriesList"!==i){const e=this.option[i];if(!e){this.option[i]=t[i];continue}e instanceof Array?this.option[i]=t[i]:n.deepAssignByKey(this.option,i,t[i])}return n.deepAssign(this.assignOption,t),this}build(t){this.instance.setOption(n.deepAssign({},this.option,t))}title(t,i){return"string"==typeof t?(this.option.title||(this.option.title={}),this.option.title.text=t,i&&(this.option.title.subtext=i)):n.deepAssignByKey(this.option,"title",t),this}legend(t){return t instanceof Array?(this.option.legend||(this.option.legend={}),this.option.legend.data=t):n.deepAssignByKey(this.option,"legend",t),this}grid(t,i,e,s){return"string"==typeof t||"number"==typeof t?(this.option.grid||(this.option.grid={}),this.option.grid.top=t,i&&(this.option.grid.right=i),e&&(this.option.grid.bottom=e),s&&(this.option.grid.left=s),this.option.grid.containLabel=!0):n.deepAssignByKey(this.option,"grid",t),this}xAxis(t,i){return this.option.xAxis||(this.option.xAxis={}),t?(t instanceof Array?(this.option.xAxis.data=t,"boolean"==typeof i?n.deepAssign(this.option.xAxis,{type:"category",boundaryGap:i}):this.option.xAxis.type=i||"category"):n.deepAssignByKey(this.option,"xAxis",t),this):(this.option.xAxis.type="category",this)}yAxis(t,i="value"){return this.option.yAxis||(this.option.yAxis={}),t?(t instanceof Array?(this.option.yAxis.data=t,i&&(this.option.yAxis.type=i)):n.deepAssignByKey(this.option,"yAxis",t),this):(this.option.yAxis.type="value",this)}radar(t){return t instanceof Array?(this.option.radar||(this.option.radar={}),this.option.radar.indicator=t):n.deepAssignByKey(this.option,"radar",t),this}visualMap(t){if(this.option.visualMap||(this.option.visualMap=[]),t instanceof Array)for(let i of t)n.deepAssign({},p.defaultOption.visualMap,this.assignOption.visualMap,i),this.option.visualMap.push(i);else this.option.visualMap.push(n.deepAssign({},p.defaultOption.visualMap,this.assignOption.visualMap,t));return this}tooltip(t){return"string"==typeof t?(this.option.tooltip||(this.option.tooltip={}),this.option.tooltip.trigger=t):n.deepAssignByKey(this.option,"tooltip",t),this}toolbox(t){if(t instanceof Array){this.option.toolbox||(this.option.toolbox={});const i={};for(let e of t)e instanceof Array?i.magicType={type:e}:i[e]={};this.option.toolbox.feature=i}else n.deepAssignByKey(this.option,"toolbox",t);return this}series(t,i,e){this.option.series||(this.option.series=[]);let s={};if(this.assignOption&&(this.assignOption.series&&(s=n.deepAssign({},this.assignOption.series)),this.assignOption.seriesList)){const t=this.assignOption.seriesList[this.option.series.length];t&&n.deepAssign(s,t)}return"string"==typeof t?this.option.series.push(n.deepAssign({},p.defaultOption.series,s,{type:t,data:i,name:e})):t instanceof Array?this.option.series=o.deepAssign(t,n.deepAssign({},p.defaultOption.series,s)):this.option.series.push(n.deepAssign({},p.defaultOption.series,s,t)),this}color(t){return this.option.color=t,this}};class l{title;legend;grid;xAxis;yAxis;radar;visualMap;tooltip;toolbox;series;seriesList;color;getDefaultOption(){const t={},i=["title","legend","grid","xAxis","yAxis","radar","tooltip","toolbox","series","color"];for(let e of i)this[e]&&n.deepAssignByKey(t,e,this[e]),h.defaultOption[e]&&n.deepAssignByKey(t,e,h.defaultOption[e]);return t}}const h=new class{defaultOption=new l;builder(t){return new a(t)}defaultTitle(t){n.deepAssignByKey(this.defaultOption,"title",t)}defaultGrid(t){n.deepAssignByKey(this.defaultOption,"grid",t)}defaultXAxis(t){n.deepAssignByKey(this.defaultOption,"xAxis",t)}defaultYAxis(t){n.deepAssignByKey(this.defaultOption,"yAxis",t)}defaultTooltip(t){n.deepAssignByKey(this.defaultOption,"tooltip",t)}defaultSeries(t){n.deepAssignByKey(this.defaultOption,"series",t)}defaultColor(t){this.defaultOption.color=t}},p=h;var d;!function(t){t.VALUE="value",t.CATEGORY="category",t.TIME="time",t.LOG="log"}(d||(d={}));const u=class{option={};build(){return this.option}setStyle(t){n.deepAssign(this.option,t)}};class c extends u{static builder(){return new c}smooth(t){return this.setStyle({series:{smooth:t||!0}}),this}area(){return this.setStyle({series:{areaStyle:{}}}),this}stack(t="Total"){return this.setStyle({series:{stack:t}}),this}areaStack(){return this.setStyle({series:{areaStyle:{},stack:"Total",emphasis:{focus:"series"}}}),this}gradient(t,i){if(!t)return this;t instanceof Function&&(t=t());const s={seriesList:[]};function r(t){return t.map(((i,e)=>{let s=0;return 0!==e&&(s=e/(t.length-1)),"string"==typeof i?{offset:s,color:i}:(i.offset||(i.offset=s),i)}))}for(let a=0;a<t.length;a++){const l=t[a];l&&(s.seriesList[a]=(o=r(l),n.deepAssign({areaStyle:{opacity:.8,color:new e.graphic.LinearGradient(0,0,0,1,o)}},i||{})))}var o;return this.setStyle(s),this}lineGradient(t,i,e){const s={visualMap:{type:"continuous",min:t,max:i}};return e&&(s.visualMap.inRange={},s.visualMap.inRange.color=e),n.deepAssign(this.option,s),this}markLine(t,i){this.setStyle({series:{markLine:{data:[{type:t}]}}})}}const y=c;class f extends u{static builder(){return new f}background(t="rgba(180, 180, 180, 0.2)"){return this.setStyle({series:{showBackground:!0,backgroundStyle:{color:t}}}),this}}const x=f;const g=new class{formatMap(t,i){for(let e in i)t=t.replace(new RegExp(`{${e}}`,"g"),i[e]);return t}};class m extends u{static builder(){return new m}pointer(t="line"){return this.setStyle({tooltip:{trigger:"axis",axisPointer:{type:t}}}),this}formatter(t){return t=(t=(t=(t=t.replace(/{sname}/g,"{a}")).replace(/{name}/g,"{b}")).replace(/{value}/g,"{c}")).replace(/{pvalue}/g,"{d}"),this.setStyle({tooltip:{formatter:t}}),this}formatters(...t){return this.setStyle({tooltip:{formatter:i=>{let e=[];if(!i)return"";if(i instanceof Array)for(let s=0;s<i.length;s++){const r=i[s],o=s>t.length-1?t[t.length-1]:t[s];e.push(g.formatMap(o,r))}else e.push(g.formatMap(t[0],i));return e.join("<br/>")}}}),this}}const A=m;class b extends u{static builder(){return new b}doughnutRounded(){return this.setStyle({series:{radius:["40%","70%"],itemStyle:{borderRadius:10,borderColor:"#fff",borderWidth:2},emphasis:{label:{show:!0,fontSize:16,fontWeight:"bold"}}}}),this}halfDoughnut(){return this.setStyle({series:{radius:["40%","70%"],center:["50%","70%"],startAngle:180,endAngle:360}}),this}nightingale(){return this.setStyle({series:{radius:[20,140],roseType:"area",itemStyle:{borderRadius:5}}}),this}}const L=b;class S extends u{static builder(){return new S}gradient(t,i=0){const s={seriesList:[]};for(let r of t)s.seriesList[i]={itemStyle:{opacity:.8,color:new e.graphic.LinearGradient(0,0,0,1,[{offset:0,color:r[0]||void 0},{offset:1,color:r[1]||void 0}])}};return this.setStyle(s),this}}const k=S;const v=new class{uuid(t=!1){let i=(new Date).getTime(),e="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";return t&&(e="xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx"),e.replace(/[xy]/g,(function(t){let e=(i+16*Math.random())%16|0;return i=Math.floor(i/16),("x"===t?e:3&e|8).toString(16)}))}};class O{formatter="";rich={};static builder(){return new O}buildFormatter(t,i,e){const s=v.uuid(!0);this.formatter+=`{${s}|${i?"{"+i+"}":""}${e||""}}`,this.rich[s.toString()]=t}sname(t,i){return this.buildFormatter(t,"a",i),this}name(t,i){return this.buildFormatter(t,"b",i),this}value(t,i){return this.buildFormatter(t,"c",i),this}pvalue(t,i){return this.buildFormatter(t,"d",i),this}br(){return this.formatter+="\n",this}hr(){return this.buildFormatter({borderColor:"#8C8D8E",width:"100%",borderWidth:1,height:0}),this}dot(t,i=10){return this.buildFormatter({width:i,height:i,borderRadius:i,backgroundColor:t||"#444444"}),this}space(){return this.formatter+=" ",this}tab(){return this.formatter+="    ",this}span(t,i){return this.buildFormatter(t,null,i),this}custom(t,i,e){return this.formatter+=t,i&&e&&(this.rich[i]=e),this}}class w{option={};static builder(){return new w}setStyle(t){return n.deepAssign(this.option,t),this}backgroundColor(t){return this.setStyle({backgroundColor:t})}borderColor(t){return this.setStyle({borderColor:t})}borderWidth(t){return this.setStyle({borderWidth:t})}borderRadius(t){return this.setStyle({borderRadius:t})}formatter(t){return this.option.formatter=t.formatter,this.option.rich=t.rich,this}build(){return this.option}}const B=new class{};class E extends u{static builder(){return new E}initAll(){this.option.series||(this.option.series={}),this.option.series.markLine||(this.option.series.markLine={}),this.option.series.markLine.data||(this.option.series.markLine.data=[])}initIndex(t){this.option.seriesList||(this.option.seriesList=[]),this.option.seriesList[t]||(this.option.seriesList[t]={}),this.option.seriesList[t].markLine||(this.option.seriesList[t].markLine={}),this.option.seriesList[t].markLine.data||(this.option.seriesList[t].markLine.data=[])}common(t,i="all",e){const s={type:t,name:e||t};return"all"===i?(this.initAll(),this.option.series.markLine.data.push(s)):(this.initIndex(i),this.option.seriesList[i].markLine.data.push(s)),this}average(t="all",i){return this.common("average",t,i||"Avg")}max(t="all",i){return this.common("max",t,i||"Max")}min(t="all",i){return this.common("min",t,i||"Min")}median(t="all",i){return this.common("median",t,i||"Med")}custom(t,i){return"all"===i?(this.initAll(),this.option.series.markLine.data.push(t)):(this.initIndex(i),this.option.seriesList[i].markLine.data.push(t)),this}custom2(t,i,e="all"){return"all"===e?(this.initAll(),this.option.series.markLine.data.push([t,i])):(this.initIndex(e),this.option.seriesList[e].markLine.data.push([t,i])),this}areaPieces(t,i="x",e="all",s){if("all"===e){this.initAll();for(let e of t)this.option.series.markLine.data.push({["x"===i?"xAxis":"yAxis"]:e});n.deepAssign(this.option.series.markLine,s)}else{this.initIndex(e);for(let s of t)this.option.seriesList[e].markLine.data.push({["x"===i?"xAxis":"yAxis"]:s});n.deepAssign(this.option.seriesList[e].markLine,s)}return this}}const M=E;class P extends u{static builder(){return new P}initAll(){this.option.series||(this.option.series={}),this.option.series.markPoint||(this.option.series.markPoint={}),this.option.series.markPoint.data||(this.option.series.markPoint.data=[])}initIndex(t){this.option.seriesList||(this.option.seriesList=[]),this.option.seriesList[t]||(this.option.seriesList[t]={}),this.option.seriesList[t].markPoint||(this.option.seriesList[t].markPoint={}),this.option.seriesList[t].markPoint.data||(this.option.seriesList[t].markPoint.data=[])}common(t,i,e){const s={type:t,name:e||t};return"all"===i?(this.initAll(),this.option.series.markPoint.data.push(s)):(this.initIndex(i),this.option.seriesList[i].markPoint.data.push(s)),this}max(t="all",i){return this.common("max",t,i)}min(t="all",i){return this.common("min",t,i)}average(t="all",i){return this.common("average",t,i)}custom(t,i){return"all"===i?(this.initAll(),this.option.series.markPoint.data.push(t)):(this.initIndex(i),this.option.seriesList[i].markPoint.data.push(t)),this}}const K=P,T=i})(),r=r.default})()));