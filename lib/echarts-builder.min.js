!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("echarts")):"function"==typeof define&&define.amd?define(["echarts"],e):"object"==typeof exports?exports.echartsBuilder=e(require("echarts")):t.echartsBuilder=e(t.echarts)}(self,(t=>(()=>{"use strict";var e={190:e=>{e.exports=t}},i={};function s(t){var o=i[t];if(void 0!==o)return o.exports;var n=i[t]={exports:{}};return e[t](n,n.exports,s),n.exports}s.d=(t,e)=>{for(var i in e)s.o(e,i)&&!s.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},s.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),s.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var o={};return(()=>{s.r(o),s.d(o,{EchartsAxisType:()=>i,EchartsBuilder:()=>h,EchartsLineStyle:()=>y,default:()=>f});var t={};s.r(t),s.d(t,{EchartsAxisType:()=>i,EchartsBuilder:()=>h,EchartsLineStyle:()=>y,default:()=>f});const e=t;var i;!function(t){t.VALUE="value",t.CATEGORY="category",t.TIME="time",t.LOG="log"}(i||(i={}));var n=s(190);const r=new class{deepAssign(t,e){return e&&Array.isArray(e)?e.map(((e,i)=>null==e?t[i]:Array.isArray(e)?this.deepAssign(t[i]||[],e):"object"==typeof e?p.deepAssign(t[i]||{},e):e)):t}};const p=new class{deepAssign(t,...e){if(!e)return t;for(let i of e)if("object"==typeof i)for(const e in i)if(i.hasOwnProperty(e)){const s=i[e];if(null==s)continue;Array.isArray(s)?t[e]=r.deepAssign(t[e]||[],i[e]):t[e]="object"!=typeof s?s:this.deepAssign(t[e]||{},s)}return t}deepAssignByKey(t,e,...i){return i?(t[e]||(t[e]={}),this.deepAssign(t[e],...i)):t}};const a=class{instance;option=h.defaultOption.getDefaultOption();assignOption={};constructor(t){if("string"==typeof t&&(t=document.getElementById(t)),!(t instanceof HTMLElement))throw new Error("element error");this.instance=n.getInstanceByDom(t),this.instance||(this.instance=n.init(t))}assign(t){for(let e in t)if(t[e]&&"series"!==e&&"seriesList"!==e){const i=this.option[e];if(!i){this.option[e]=t[e];continue}i instanceof Array?this.option[e]=t[e]:p.deepAssignByKey(this.option,e,t[e])}return p.deepAssign(this.assignOption,t),this}build(t){this.instance.setOption(p.deepAssign({},this.option,t))}title(t,e){return"string"==typeof t?(this.option.title||(this.option.title={}),this.option.title.text=t,e&&(this.option.title.subtext=e)):p.deepAssignByKey(this.option,"title",t),this}legend(t){return t instanceof Array?(this.option.legend||(this.option.legend={}),this.option.legend.data=t):p.deepAssignByKey(this.option,"legend",t),this}grid(t,e,i,s){return"string"==typeof t||"number"==typeof t?(this.option.grid||(this.option.grid={}),this.option.grid.left=t,e&&(this.option.grid.top=e),i&&(this.option.grid.right=i),s&&(this.option.grid.bottom=s)):p.deepAssignByKey(this.option,"grid",t),this}xAxis(t,e){return t instanceof Array?(this.option.xAxis||(this.option.xAxis={}),this.option.xAxis.data=t,e&&(this.option.xAxis.type=e)):p.deepAssignByKey(this.option,"xAxis",t),this}yAxis(t,e){return t instanceof Array?(this.option.yAxis||(this.option.yAxis={}),this.option.yAxis.data=t,e&&(this.option.yAxis.type=e)):p.deepAssignByKey(this.option,"yAxis",t),this}radar(t){return t instanceof Array?(this.option.radar||(this.option.radar={}),this.option.radar.indicator=t):p.deepAssignByKey(this.option,"radar",t),this}tooltip(t){return"string"==typeof t?(this.option.tooltip||(this.option.tooltip={}),this.option.tooltip.trigger=t):p.deepAssignByKey(this.option,"tooltip",t),this}toolbox(t){if(t instanceof Array){this.option.toolbox||(this.option.toolbox={});const e={};for(let i of t)i instanceof Array?e.magicType=i:e[i]={};this.option.toolbox.feature=e}else p.deepAssignByKey(this.option,"toolbox",t);return this}series(t,e,i){this.option.series||(this.option.series=[]);let s={};if(this.assignOption&&this.assignOption.series&&(s=p.deepAssign({},this.assignOption.series),this.assignOption.seriesList)){const t=this.assignOption.seriesList[this.option.series.length];t&&p.deepAssign(s,t)}return"string"==typeof t?this.option.series.push(p.deepAssign({},h.defaultOption.series,s,{type:t,data:e,name:i})):this.option.series.push(p.deepAssign({},h.defaultOption.series,s,t)),this.option.tooltip||(this.option.tooltip={}),this.option.series&&this.option.series[0]&&["pie","radar"].includes(this.option.series[0].type)?this.option.tooltip.trigger="item":this.option.tooltip.trigger="axis",this}color(t){return this.option.color=t,this}};class l{title;legend;grid;xAxis={type:i.CATEGORY};yAxis={type:i.VALUE};radar;tooltip={trigger:"item"};toolbox;series;seriesList;color;getDefaultOption(){const t={},e=["title","legend","grid","xAxis","yAxis","radar","tooltip","toolbox","series","color"];for(let i of e)this[i]&&p.deepAssignByKey(t,i,this[i]),d.defaultOption[i]&&p.deepAssignByKey(t,i,d.defaultOption[i]);return t}}const d=new class{defaultOption=new l;builder(t){return new a(t)}defaultTitle(t){p.deepAssignByKey(this.defaultOption,"title",t)}defaultGrid(t){p.deepAssignByKey(this.defaultOption,"grid",t)}defaultXAxis(t){p.deepAssignByKey(this.defaultOption,"xAxis",t)}defaultYAxis(t){p.deepAssignByKey(this.defaultOption,"yAxis",t)}defaultTooltip(t){p.deepAssignByKey(this.defaultOption,"tooltip",t)}defaultSeries(t){p.deepAssignByKey(this.defaultOption,"series",t)}defaultColor(t){this.defaultOption.color=t}},h=d;const y=new class{common(){return{}}smooth(){return{series:{smooth:!0}}}area(){return{series:{areaStyle:{}}}}stack(){return{series:{stack:"Total"}}}areaStack(){return{series:{areaStyle:{},stack:"Total",emphasis:{focus:"series"}}}}gradient(t){const e={seriesList:[]};for(let i of t)e.seriesList.push({areaStyle:{opacity:.8,color:new n.graphic.LinearGradient(0,0,0,1,[{offset:0,color:i[0]||void 0},{offset:1,color:i[1]||void 0}])}});return e}},f=e})(),o=o.default})()));