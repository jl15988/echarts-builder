!function(t,i){"object"==typeof exports&&"object"==typeof module?module.exports=i(require("echarts")):"function"==typeof define&&define.amd?define(["echarts"],i):"object"==typeof exports?exports.echartsBuilder=i(require("echarts")):t.echartsBuilder=i(t.echarts)}(self,(t=>(()=>{"use strict";var i={190:i=>{i.exports=t}},e={};function s(t){var o=e[t];if(void 0!==o)return o.exports;var n=e[t]={exports:{}};return i[t](n,n.exports,s),n.exports}s.d=(t,i)=>{for(var e in i)s.o(i,e)&&!s.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:i[e]})},s.o=(t,i)=>Object.prototype.hasOwnProperty.call(t,i),s.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var o={};return(()=>{s.r(o),s.d(o,{EchartsAxisType:()=>e,EchartsBuilder:()=>d,EchartsLineStyle:()=>g,default:()=>f});var t={};s.r(t),s.d(t,{EchartsAxisType:()=>e,EchartsBuilder:()=>d,EchartsLineStyle:()=>g,default:()=>f});const i=t;var e;!function(t){t.VALUE="value",t.CATEGORY="category",t.TIME="time",t.LOG="log"}(e||(e={}));var n=s(190);const r=new class{deepAssign(t,i){return i&&Array.isArray(i)?i.map(((i,e)=>null==i?t[e]:Array.isArray(i)?this.deepAssign(t[e]||[],i):"object"==typeof i?p.deepAssign(t[e]||{},i):i)):t}};const p=new class{deepAssign(t,...i){if(!i)return t;for(let e of i)if("object"==typeof e)for(const i in e)if(e.hasOwnProperty(i)){const s=e[i];if(null==s)continue;Array.isArray(s)?t[i]=r.deepAssign(t[i]||[],e[i]):t[i]="object"!=typeof s?s:this.deepAssign(t[i]||{},s)}return t}deepAssignByKey(t,i,...e){return e?(t[i]||(t[i]={}),this.deepAssign(t[i],...e)):t}};const a=class{instance;option=d.defaultOption.getDefaultOption();assignOption={};constructor(t){if("string"==typeof t&&(t=document.getElementById(t)),!(t instanceof HTMLElement))throw new Error("element error");this.instance=n.getInstanceByDom(t),this.instance||(this.instance=n.init(t))}assign(t){for(let i in t)if(t[i]&&"series"!==i&&"seriesList"!==i){const e=this.option[i];if(!e){this.option[i]=t[i];continue}e instanceof Array?this.option[i]=t[i]:p.deepAssignByKey(this.option,i,t[i])}return p.deepAssign(this.assignOption,t),this}build(t){this.instance.setOption(p.deepAssign({},this.option,t))}title(t,i){return"string"==typeof t?(this.option.title||(this.option.title={}),this.option.title.text=t,i&&(this.option.title.subtext=i)):p.deepAssignByKey(this.option,"title",t),this}legend(t){return t instanceof Array?(this.option.legend||(this.option.legend={}),this.option.legend.data=t):p.deepAssignByKey(this.option,"legend",t),this}grid(t,i,e,s){return"string"==typeof t||"number"==typeof t?(this.option.grid||(this.option.grid={}),this.option.grid.left=t,i&&(this.option.grid.top=i),e&&(this.option.grid.right=e),s&&(this.option.grid.bottom=s)):p.deepAssignByKey(this.option,"grid",t),this}xAxis(t,i){return t instanceof Array?(this.option.xAxis||(this.option.xAxis={}),this.option.xAxis.data=t,i&&(this.option.xAxis.type=i)):p.deepAssignByKey(this.option,"xAxis",t),this}yAxis(t,i){return t instanceof Array?(this.option.yAxis||(this.option.yAxis={}),this.option.yAxis.data=t,i&&(this.option.yAxis.type=i)):p.deepAssignByKey(this.option,"yAxis",t),this}radar(t){return t instanceof Array?(this.option.radar||(this.option.radar={}),this.option.radar.indicator=t):p.deepAssignByKey(this.option,"radar",t),this}visualMap(t){if(this.option.visualMap||(this.option.visualMap=[]),t instanceof Array)for(let i of t)p.deepAssign({},d.defaultOption.visualMap,this.assignOption.visualMap,i),this.option.visualMap.push(i);else this.option.visualMap.push(p.deepAssign({},d.defaultOption.visualMap,this.assignOption.visualMap,t));return this}tooltip(t){return"string"==typeof t?(this.option.tooltip||(this.option.tooltip={}),this.option.tooltip.trigger=t):p.deepAssignByKey(this.option,"tooltip",t),this}toolbox(t){if(t instanceof Array){this.option.toolbox||(this.option.toolbox={});const i={};for(let e of t)e instanceof Array?i.magicType=e:i[e]={};this.option.toolbox.feature=i}else p.deepAssignByKey(this.option,"toolbox",t);return this}series(t,i,e){this.option.series||(this.option.series=[]);let s={};if(this.assignOption&&this.assignOption.series&&(s=p.deepAssign({},this.assignOption.series),this.assignOption.seriesList)){const t=this.assignOption.seriesList[this.option.series.length];t&&p.deepAssign(s,t)}return"string"==typeof t?this.option.series.push(p.deepAssign({},d.defaultOption.series,s,{type:t,data:i,name:e})):this.option.series.push(p.deepAssign({},d.defaultOption.series,s,t)),this.option.tooltip||(this.option.tooltip={}),this.option.series&&this.option.series[0]&&["pie","radar"].includes(this.option.series[0].type)?this.option.tooltip.trigger="item":this.option.tooltip.trigger="axis",this}color(t){return this.option.color=t,this}};class l{title;legend;grid;xAxis={type:e.CATEGORY};yAxis={type:e.VALUE};radar;visualMap;tooltip={trigger:"item"};toolbox;series;seriesList;color;getDefaultOption(){const t={},i=["title","legend","grid","xAxis","yAxis","radar","tooltip","toolbox","series","color"];for(let e of i)this[e]&&p.deepAssignByKey(t,e,this[e]),h.defaultOption[e]&&p.deepAssignByKey(t,e,h.defaultOption[e]);return t}}const h=new class{defaultOption=new l;builder(t){return new a(t)}defaultTitle(t){p.deepAssignByKey(this.defaultOption,"title",t)}defaultGrid(t){p.deepAssignByKey(this.defaultOption,"grid",t)}defaultXAxis(t){p.deepAssignByKey(this.defaultOption,"xAxis",t)}defaultYAxis(t){p.deepAssignByKey(this.defaultOption,"yAxis",t)}defaultTooltip(t){p.deepAssignByKey(this.defaultOption,"tooltip",t)}defaultSeries(t){p.deepAssignByKey(this.defaultOption,"series",t)}defaultColor(t){this.defaultOption.color=t}},d=h;const u=class{option={};build(){return this.option}};class y extends u{static builder(){return new y}smooth(){return p.deepAssign(this.option,{series:{smooth:!0}}),this}area(){return p.deepAssign(this.option,{series:{areaStyle:{}}}),this}stack(){return p.deepAssign(this.option,{series:{stack:"Total"}}),this}areaStack(){return p.deepAssign(this.option,{series:{areaStyle:{},stack:"Total",emphasis:{focus:"series"}}}),this}gradient(t){const i={seriesList:[]};for(let e of t)i.seriesList.push({areaStyle:{opacity:.8,color:new n.graphic.LinearGradient(0,0,0,1,[{offset:0,color:e[0]||void 0},{offset:1,color:e[1]||void 0}])}});return p.deepAssign(this.option,i),this}lineGradient(t,i,e){const s={visualMap:{type:"continuous",min:t,max:i}};return e&&(s.visualMap.inRange={},s.visualMap.inRange.color=e),p.deepAssign(this.option,s),this}}const g=y,f=i})(),o=o.default})()));